parameters:
  perfBranch: 'main' # Currently only used for building the BDN App
  runtimeRepoAlias: runtime
  performanceRepoAlias: self
  jobParameters: {}

jobs:
  - template: /eng/pipelines/coreclr/templates/perf-build-jobs.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      perfBranch: ${{ parameters.perfBranch }}

  # Build and run iOS Mono and NativeAOT scenarios
  - template: /eng/performance/templates/runtime-ios-scenarios-perf-jobs.yml
    parameters:
      hybridGlobalization: True
      runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
      performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
      jobParameters: ${{ parameters.jobParameters }}

  # run android scenarios
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: mono
      platforms:
        - windows_x64
      jobParameters:
        runtimeType: AndroidMono
        projectFile: $(Build.SourcesDirectory)/eng/testing/performance/android_scenarios.proj
        runKind: android_scenarios
        isScenario: true
        logicalMachine: 'perfpixel4a'
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run mono microbenchmarks perf job
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: mono
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runtimeType: mono
        runKind: micro_mono
        logicalMachine: 'perftiger'
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run mono interpreter perf job
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: mono
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runtimeType: mono
        codeGenType: 'Interpreter'
        runKind: micro_mono
        logicalMachine: 'perftiger'
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run mono aot microbenchmarks perf job
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml # NOTE: should we move this file out of coreclr tempelates because it contains mono jobs?
      buildConfig: release
      runtimeFlavor: aot
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runtimeType: mono
        codeGenType: 'AOT'
        runKind: micro_mono
        logicalMachine: 'perftiger'
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run coreclr perftiger microbenchmarks perf job
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - linux_x64
      - windows_x64
      - windows_x86
      - linux_musl_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runKind: micro
        logicalMachine: 'perftiger'
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run coreclr perftiger microbenchmarks no dynamic pgo perf jobs
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - windows_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runKind: micro
        logicalMachine: 'perftiger'
        pgoRunType: nodynamicpgo
        additionalJobIdentifier: nodynamicpgo
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runKind: micro
        logicalMachine: 'perftiger'
        pgoRunType: nodynamicpgo
        additionalJobIdentifier: nodynamicpgo
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run coreclr perftiger microbenchmarks no R2R perf jobs
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - windows_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runKind: micro
        logicalMachine: 'perftiger'
        r2rRunType: nor2r
        additionalJobIdentifier: nor2r
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - linux_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runKind: micro
        logicalMachine: 'perftiger'
        r2rRunType: nor2r
        additionalJobIdentifier: nor2r
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run coreclr perfowl microbenchmarks perf job
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - linux_x64
      - windows_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runKind: micro
        logicalMachine: 'perfowl'
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run coreclr perfviper microbenchmarks perf job
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - linux_x64
      - windows_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runKind: micro
        logicalMachine: 'perfviper'
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run coreclr perfviper microbenchmarks perf jitoptrepeat jobs
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - linux_x64
      - windows_x64
      jobParameters:
        liveLibrariesBuildConfig: Release
        runKind: micro
        logicalMachine: 'perfviper'
        experimentName: 'jitoptrepeat'
        additionalJobIdentifier: jitoptrepeat
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}

  # run coreclr crossgen perf job
  - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
    parameters:
      jobTemplate: /eng/performance/templates/runtime-perf-job.yml
      buildConfig: release
      runtimeFlavor: coreclr
      platforms:
      - windows_x64
      - windows_x86
      jobParameters:
        liveLibrariesBuildConfig: Release
        projectFile: $(Build.SourcesDirectory)/eng/testing/performance/crossgen_perf.proj
        runKind: crossgen_scenarios
        isScenario: true
        logicalMachine: 'perftiger_crossgen'
        runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
        performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
        ${{ each parameter in parameters.jobParameters }}:
          ${{ parameter.key }}: ${{ parameter.value }}
